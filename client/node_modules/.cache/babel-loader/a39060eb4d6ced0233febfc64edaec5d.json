{"ast":null,"code":"// unix absolute paths are also absolute on win32, so we use this for both\nconst {\n  isAbsolute,\n  parse\n} = require('path').win32; // returns [root, stripped]\n// Note that windows will think that //x/y/z/a has a \"root\" of //x/y, and in\n// those cases, we want to sanitize it to x/y/z/a, not z/a, so we strip /\n// explicitly if it's the first character.\n// drive-specific relative paths on Windows get their root stripped off even\n// though they are not absolute, so `c:../foo` becomes ['c:', '../foo']\n\n\nmodule.exports = path => {\n  let r = '';\n  let parsed = parse(path);\n\n  while (isAbsolute(path) || parsed.root) {\n    // windows will think that //x/y/z has a \"root\" of //x/y/\n    // but strip the //?/C:/ off of //?/C:/path\n    const root = path.charAt(0) === '/' && path.slice(0, 4) !== '//?/' ? '/' : parsed.root;\n    path = path.substr(root.length);\n    r += root;\n    parsed = parse(path);\n  }\n\n  return [r, path];\n};","map":null,"metadata":{},"sourceType":"script"}