{"ast":null,"code":"var _jsxFileName = \"/Users/varvaralipunova/Desktop/React-Projects/streams/client/src/components/streams/StreamEdit.js\";\nimport _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.stream.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"Edit a Stream\"), /*#__PURE__*/React.createElement(StreamForm, {\n      initialValues: _.pick(this.props.stream, 'title', 'description'),\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/varvaralipunova/Desktop/React-Projects/streams/client/src/components/streams/StreamEdit.js"],"names":["_","React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","props","stream","id","componentDidMount","match","params","render","pick","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKvCC,QALuC,GAK3BC,UAAD,IAAgB;AACzB,WAAKC,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,MAAX,CAAkBC,EAAxC,EAA4CH,UAA5C;AACD,KAPsC;AAAA;;AACvCI,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBH,EAA/C;AACD;;AAMDI,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKN,KAAL,CAAWC,MAAhB,EAAwB;AACtB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,UAAD;AACE,MAAA,aAAa,EAAEX,CAAC,CAACiB,IAAF,CAAO,KAAKP,KAAL,CAAWC,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CADjB;AAEE,MAAA,QAAQ,EAAE,KAAKH,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AAtBsC;;AAyBzC,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAET,IAAAA,MAAM,EAAEQ,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACN,KAAT,CAAeC,MAAf,CAAsBH,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeV,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAsDE,UAAtD,CAAf","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchStream, editStream } from '../../actions'\nimport StreamForm from './StreamForm'\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id)\n  }\n\n  onSubmit = (formValues) => {\n    this.props.editStream(this.props.stream.id, formValues)\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return <div>Loading...</div>\n    }\n    return (\n      <div>\n        <h3>Edit a Stream</h3>\n        <StreamForm\n          initialValues={_.pick(this.props.stream, 'title', 'description')}\n          onSubmit={this.onSubmit}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit)\n"]},"metadata":{},"sourceType":"module"}