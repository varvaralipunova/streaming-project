{"ast":null,"code":"import streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  console.log(getState());\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post('/streams', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/varvaralipunova/Desktop/React-Projects/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","console","log","auth","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,aANF,EAOEC,WAPF,QAQO,SARP;AAUA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAET,OADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AAAEF,IAAAA,IAAI,EAAER;AAAR,GAAP;AACD,CAFM;AAIP,OAAO,MAAMW,YAAY,GAAIC,UAAD,IAAgB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACxEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,EAApB;AACA,QAAM;AAAEP,IAAAA;AAAF,MAAaO,QAAQ,GAAGG,IAA9B;AACA,QAAMC,QAAQ,GAAG,MAAMpB,OAAO,CAACqB,IAAR,CAAa,UAAb,EAAyB,EAAE,GAAGP,UAAL;AAAiBL,IAAAA;AAAjB,GAAzB,CAAvB;AACAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,aAAR;AAAuBQ,IAAAA,OAAO,EAAES,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOR,QAAP,IAAoB;AACpD,QAAMK,QAAQ,GAAG,MAAMpB,OAAO,CAACwB,GAAR,CAAY,UAAZ,CAAvB;AACAT,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAAES,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ,MAAOX,QAAP,IAAoB;AACrD,QAAMK,QAAQ,GAAG,MAAMpB,OAAO,CAACwB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AACAX,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,YAAR;AAAsBM,IAAAA,OAAO,EAAES,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKZ,UAAL,KAAoB,MAAOC,QAAP,IAAoB;AAChE,QAAMK,QAAQ,GAAG,MAAMpB,OAAO,CAAC4B,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BZ,UAA9B,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEH,WAAR;AAAqBI,IAAAA,OAAO,EAAES,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAOX,QAAP,IAAoB;AACtD,QAAMf,OAAO,CAAC8B,MAAR,CAAgB,WAAUJ,EAAG,EAA7B,CAAN;AACAX,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEJ,aAAR;AAAuBK,IAAAA,OAAO,EAAEe;AAAhC,GAAD,CAAR;AACD,CAHM","sourcesContent":["import streams from '../apis/streams'\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM,\n} from './types'\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId,\n  }\n}\n\nexport const signOut = () => {\n  return { type: SIGN_OUT }\n}\n\nexport const createStream = (formValues) => async (dispatch, getState) => {\n  console.log(getState())\n  const { userId } = getState().auth\n  const response = await streams.post('/streams', { ...formValues, userId })\n  dispatch({ type: CREATE_STREAM, payload: response.data })\n}\n\nexport const fetchStreams = () => async (dispatch) => {\n  const response = await streams.get('/streams')\n  dispatch({ type: FETCH_STREAMS, payload: response.data })\n}\n\nexport const fetchStream = (id) => async (dispatch) => {\n  const response = await streams.get(`/streams/${id}`)\n  dispatch({ type: FETCH_STREAM, payload: response.data })\n}\n\nexport const editStream = (id, formValues) => async (dispatch) => {\n  const response = await streams.put(`/streams/${id}`, formValues)\n  dispatch({ type: EDIT_STREAM, payload: response.data })\n}\n\nexport const deleteStream = (id) => async (dispatch) => {\n  await streams.delete(`streams/${id}`)\n  dispatch({ type: DELETE_STREAM, payload: id })\n}\n"]},"metadata":{},"sourceType":"module"}